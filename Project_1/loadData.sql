-- CREATE SEQUENCE sequence seq1
-- 	START WITH 1
-- 	INCREMENT BY 1;


-- CREATE TRIGGER trigger name
-- 	BEFORE INSERT ON table name
-- 		FOR EACH ROW
-- 			BEGIN
-- 				SELECT seq1.NEXTVAL INTO :NEW.id field FROM DUAL;
-- 			END;
-- /


INSERT INTO USERS(USER_ID, FIRST_NAME, LAST_NAME, YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER)
SELECT USER_ID, FIRST_NAME, LAST_NAME, YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER
FROM PUBLIC_USER_INFORMATION

--LOAD PHOTOS
INSERT INTO Photos(
	photo_id, 
	album_id, 
	photo_caption, 
	photo_modified, 
	photo_link) 
SELECT PHOTO_ID, 
	ALBUM_ID, 
	PHOTO_CAPTION, 
	PHOTO_MODIFIED_TIME, 
	PHOTO_LINK
FROM jsoren.PUBLIC_PHOTO_INFORMATION

--LOAD ALBUMS
INSERT INTO Albums(
	album_id, 
	album_owner_id, 
	album_name, 
	album_created, 
	album_modified, 
	album_link, 
	album_visibility, 
	cover_photo_id)
SELECT 
	ALBUM_ID, 
	OWNER_ID, 
	ALBUM_NAME, 
	ALBUM_CREATED_TIME, 
	ALBUM_MODIFIED_TIME, 
	ALBUM_LINK, 
	ALBUM_VISIBILITY, 
	COVER_PHOTO_ID
FROM jsoren.PUBLIC_PHOTO_INFORMATION

--LOAD TAGS
INSERT INTO Tags(
	tag_photo_id, 
	tag_subject_id, 
	tag_created, 
	tag_x, 
	tag_y)
SELECT 
	PHOTO_ID, 
	TAG_SUBJECT_ID, 
	TAG_CREATED_TIME, 
	TAG_X_COORDINATE, 
	TAG_Y_COORDINATE
FROM jsoren.PUBLIC_TAG_INFORMATION

--LOAD EVENTS
INSERT INTO Events
SELECT 
	t1.EVENT_ID, 
	t1.EVENT_CREATOR_ID, 
	t1.EVENT_NAME,
	t1.EVENT_TAGLINE,
	t1.EVENT_DESCRIPTION,
	t1.EVENT_HOST,
	t1.EVENT_TYPE,
	t1.EVENT_SUBTYPE,
	t1.EVENT_ADDRESS,
	t2.EVENT_CITY_ID, --should autoincrement 
	t1.EVENT_START_TIME,
	t1.EVENT_END_TIME
FROM
	jsoren.PUBLIC_EVENT_INFORMATION t1, CITIES t2
WHERE t1.EVENT_CITY = t2.CITY_NAME
	AND t1.EVENT_STATE = t2.STATE_NAME
	AND t1.EVENT_COUNTRY = t2.COUNTRY_NAME


